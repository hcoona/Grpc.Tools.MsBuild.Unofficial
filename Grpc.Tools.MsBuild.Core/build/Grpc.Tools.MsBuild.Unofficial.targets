<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

  <PropertyGroup>
    <CoreCompileDependsOn>
      GenerateGrpcFiles;
	  CopyGrpcFiles;
      $(CoreCompileDependsOn)
    </CoreCompileDependsOn>
  </PropertyGroup>

  <ItemGroup Condition="'$(AutoDiscoverProjectProtocFiles)' == 'true'">
    <ProtoFile Include="**\*.proto" />
  </ItemGroup>

  <ItemGroup>
    <NormalizedProtoFile Include="@(ProtoFile -> '%(fullpath)')" />
    <ProtoIncludeFolder Include="@(NormalizedProtoFile -> '%(rootdir)%(directory)')" />
    <ProtoIncludeFolder Include="$(ProtoIncludeFolder)" />
    <NormalizedProtoIncludeFolder Include="@(ProtoIncludeFolder -> Distinct())" />
  </ItemGroup>

  <UsingTask TaskName="Grpc.Tools.MsBuild.Core.GetPlatformInfo"
             AssemblyFile="$(_GrpcToolsMsBuildTaskAssembly)" />

  <Target Name="GetGrpcToolsSubFolderName">
    <GetPlatformInfo>
      <Output TaskParameter="OSName" PropertyName="_OSName" />
      <Output TaskParameter="Platform" PropertyName="_Platform" />
    </GetPlatformInfo>
  </Target>

  <Target Name="GetGrpcOutputFiles">
    <PropertyGroup>
      <_GrpcOutputFolder>$([System.IO.Path]::Combine($(IntermediateOutputPath), _GrpcOutput))</_GrpcOutputFolder>
      <_ProtoOuputFiles>@(ProtoFile -> '$(_GrpcOutputFolder)\%(Filename).cs')</_ProtoOuputFiles>
      <_GrpcOuputFiles>@(ProtoFile -> '$(_GrpcOutputFolder)\%(Filename)Grpc.cs')</_GrpcOuputFiles>
    </PropertyGroup>
  </Target>

  <Target Name="CoreGenerateGrpcFiles"
          DependsOnTargets="GetGrpcToolsSubFolderName;GetGrpcOutputFiles"
          Inputs="@(NormalizedProtoFile)"
          Outputs="$(_ProtoOuputFiles);$(_GrpcOuputFiles)">
    <PropertyGroup>
      <_GrpcToolsSubFolderName>$(_OSName)_$(_Platform)</_GrpcToolsSubFolderName>
      <GrpcToolsPath Condition="'$(GrpcToolsPath)' == ''">$(MSBuildThisFileDirectory)..\..\..\grpc.tools\$(GrpcToolsVersion)\tools\</GrpcToolsPath>
      <GrpcCSharpPluginExecName Condition="'$(_OSName)' == 'windows'">$([System.IO.Path]::ChangeExtension('$(GrpcCSharpPluginExecName)', exe))</GrpcCSharpPluginExecName>
      <GrpcProtocExecName Condition="'$(_OSName)' == 'windows'">$([System.IO.Path]::ChangeExtension('$(GrpcProtocExecName)', exe))</GrpcProtocExecName>
      <GrpcCSharpPluginExec Condition="'$(GrpcCSharpPluginExec)' == ''">$([System.IO.Path]::Combine($(GrpcToolsPath), $(_GrpcToolsSubFolderName), $(GrpcCSharpPluginExecName)))</GrpcCSharpPluginExec>
      <GrpcProtocExec Condition="'$(GrpcProtocExec)' == ''">$([System.IO.Path]::Combine($(GrpcToolsPath), $(_GrpcToolsSubFolderName), $(GrpcProtocExecName)))</GrpcProtocExec>
    </PropertyGroup>
    <MakeDir Directories="$(_GrpcOutputFolder)" />
    <Exec Command="$(GrpcProtocExec) $(GrpcAdditionalArguments) @(NormalizedProtoIncludeFolder -> '-I%(Identity)', ' ') @(GrpcIncludeFolders -> '-I%(Identity)', ' ') --csharp_out=&quot;$(_GrpcOutputFolder)&quot; --grpc_out=&quot;$(_GrpcOutputFolder)&quot; @(NormalizedProtoFile -> '%(Identity)', ' ') --plugin=protoc-gen-grpc=$(GrpcCSharpPluginExec)" />
  </Target>

  <Target Name="GenerateGrpcFiles"
          BeforeTargets="CoreCompile"
          DependsOnTargets="GetGrpcOutputFiles;CoreGenerateGrpcFiles">
    <ItemGroup>
      <!-- Workaround for case sensitive issue -->
      <Compile Include="$(_GrpcOutputFolder)\*.cs" />
      <FileWrites Include="$(_GrpcOutputFolder)\*.cs" />
      <!--
      <Compile Include="$(_ProtoOuputFiles);$(_GrpcOuputFiles)" />
      <FileWrites Include="$(_ProtoOuputFiles);$(_GrpcOuputFiles)" />
      -->
    </ItemGroup>
  </Target>
  
  <Target Name="CopyGrpcFiles"
          DependsOnTargets="GenerateGrpcFiles"
		  Condition="'@(GrpcOutputFolderCopy)' != ''">

    <ItemGroup>
      <GeneratedFile Include="$(_GrpcOutputFolder)\*.cs" />
    </ItemGroup>

    <MakeDir Directories="%(GrpcOutputFolderCopy.Identity)" />
    <Copy SourceFiles="@(GeneratedFile)" DestinationFolder ="%(GrpcOutputFolderCopy.Identity)" />
  </Target>

  <Target Name="DeleteGrpcFiles" 
          DependsOnTargets="GetGrpcOutputFiles"
          AfterTargets="Clean">
	  <RemoveDir Directories="%(GrpcOutputFolderCopy.Identity);$(_GrpcOutputFolder)" />
  </Target>

</Project>
